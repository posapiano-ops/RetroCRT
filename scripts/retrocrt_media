#!/bin/bash

##############################################################################
# EmulationStation scales images & videos fairly terribly when you're on a low
# resolution display.  This script is designed to probe your media files and
# resize them if they exceed the specifications
##############################################################################
# In this example from the RetroCRT 240p theme we have a max size of 40% x 45%
# of the screen for our preview images & videos
#
#    <video name="md_video">
#      <origin>0.5 0.5</origin>
#      <pos>0.740 0.470</pos>
#      <maxSize>0.40 0.450</maxSize>
#      <showSnapshotNoVideo>true</showSnapshotNoVideo>
#      <delay>3</delay>
#      <showSnapshotDelay>true</showSnapshotDelay>
#    </video>
#  </view>
#
# so the math works out as
#
# 320 * .4 = 128
# 240 * .45 = 108
#
# And that gives us all we need to run the script against the necessary files
# As you can see, both images & videos are included, the script checks the
# media type prior to acting on anything
#
# find $HOME/RetroPie/roms/*/{image,boxart,cartart,video,snap} -type f -exec retrocrt_media 128 108 {} \;
#
# we can do the same for our marquee/wheel files
# find $HOME/RetroPie/roms/*/{marquee,wheel} -type f -exec ~/resize_media 128 36 {} \;
#
##############################################################################

max_width="$1"
max_height="$2"
sourcefile="$3"
destfile="/dev/shm/$(basename "$sourcefile")"

rvf="scale='if(gt(a,$max_height/$max_width),$max_height,-2)':'if(gt(a,$max_height/$max_width),-2,$max_width)',fade=t=in:st=0:d=1,fade=t=out:st=19:d=1"
raf="afade=t=in:st=0:d=2,afade=t=out:st=18:d=2"

if [[ "$sourcefile" =~ .*.mp4 ]]; then
	eval $(ffprobe -v error -show_entries stream=width,height,duration -of default=noprint_wrappers=1 "$sourcefile" | sed 's/^/media_/')
	if [ "$media_width" -gt "$max_width" -o "$media_height" -gt "$max_height" ]; then
		echo "##############################################################################"
		echo "processing $sourcefile"
		echo "##############################################################################"
		echo ""
		nice -n 19 \
		ionice -c 3 \
			ffmpeg \
				-loglevel fatal -stats \
				-i "$sourcefile" \
				-pix_fmt yuv420p \
				-ab 128k \
				-vf "$rvf" \
				-af "$raf" \
				-t 00:20 \
				-crf 17 \
				-preset veryslow \
				-y \
				"$destfile"
		return_code="$?"
		echo
	fi
elif [[ "$sourcefile" =~ .*.jpg|.*.png ]]; then
	eval $(identify -format "media_height=%h\nmedia_width=%w\n" "$sourcefile" )
	if [ "$media_width" -gt "$max_width" -o "$media_height" -gt "$max_height" ]; then
		echo "##############################################################################"
		echo "processing $sourcefile"
		echo "##############################################################################"
		convert "$sourcefile" $rif -resize "${target_width}x${target_height}>" "$destfile"
		return_code="$?"
		echo
	fi
else
	echo "$0 [max_width] [max_height] [file]"
	exit 1
fi

if [ "$return_code" = "0" ]; then
	mv "$destfile" "$sourcefile"
fi
